
//https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency/
class Solution {
public:
    int maxSubarrayLength(vector<int>& nums, int k) {
        unordered_map<int,int>mp;
        int i=0,j=0,n=nums.size(),sum=0,maxi=-1;
        while(j<n)
        {
            if(mp[nums[j]]>=k){
                mp[nums[i]]--;
                sum-=1;
                i++;
            }else
            {
                 mp[nums[j]]++;
                 sum+=1;
            j++;
            }
            maxi=max(maxi,sum);  
        }
        return maxi;
    }
};
