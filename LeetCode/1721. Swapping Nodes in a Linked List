/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        // vector<int>ar;
        // ListNode* curr=head;
        ListNode* temp=head;
        int n=0;
        while(temp)
        {
            n++;
            temp=temp->next;
        }
        int first=k;
        int second=n-k+1;
        if(k>n/2)
        {
            first=n-k+1;
            second=k;
        }
        ListNode* h1=head;
        ListNode* h2=head;
        while(--first && h1)
        {
            h1=h1->next;
        }
        while(--second && h2)
        {
            h2=h2->next;
        }
        swap(h1->val,h2->val);

        // curr = head;
        // int sw=ar[first-1];
        // ar[first-1]=ar[second-1];
        // ar[second-1]=sw;
        // for(int i=0;i<second;i++)
        // {
        //     curr->val=ar[i];
        //     curr=curr->next;
        // }
        return head;
        
    }
};
