/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
     ListNode *temp=l1;
     stack<int>st;
     stack<int>st2;
     while(temp!=nullptr)
     {
         st.push(temp->val);
         temp=temp->next;
     }  
      ListNode *temp2=l2;
     while(temp2!=nullptr)
     {
         st2.push(temp2->val);
         temp2=temp2->next;
     }  
     int cr=0,a=0,b=0,di=0;
     string str="";
     while(st.size()!=0 && st2.size()!=0)
     {

         a=st.top();st.pop();
         b=st2.top();st2.pop();
         if(cr!=0)
         {
             a+=cr;
         }
         di=(a+b)%10;
         cr=(a+b)/10;
         str=to_string(di)+str;
     } 
     while(st.size())
     {
         a=st.top();st.pop();
         di=(a+cr)%10;
         cr=(a+cr)/10;
         str=to_string(di)+str;
     }
     while(st2.size())
     {
         a=st2.top();st2.pop();
         di=(a+cr)%10;
         cr=(a+cr)/10;
         str=to_string(di)+str;
     }
     if(cr!=0)
     {
         str=to_string(cr)+str;
     }
     ListNode* head=new ListNode(str[0]-48);;
    ListNode* temp3=head;
     for(int i=1;i<str.size();i++)
     {
         ListNode *node=new ListNode(str[i]-48);
         temp3->next=node;
         temp3=node;
     }
     return head;
    }
};
