class Solution {
public:
 int dp[505][505];
 int memo(vector<int>num1,vector<int>num2, int n,int m)
 {
     if(n<0||m<0)return 0;
     if(dp[n][m]!=-1)return dp[n][m];
     if(num1[n]==num2[m])
     {
         return dp[n][m]=1+memo(num1,num2,n-1,m-1);
     }
     else
     {
        return dp[n][m]=max(memo(num1,num2,n-1,m),memo(num1,num2,n,m-1));
     }
 }
    int maxUncrossedLines(vector<int>& nums1, vector<int>& nums2) {
        for(int i=0;i<nums1.size();i++)
        {
            for(int j=0;j<nums2.size();j++)
            {
                dp[i][j]=-1;
            }
        }
        return memo(nums1,nums2,nums1.size()-1,nums2.size()-1);
    }
};
