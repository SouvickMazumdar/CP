//https://leetcode.com/problems/count-good-nodes-in-binary-tree/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count=0;
    void count_check(vector<int>&vt)
    {
        int k=vt[vt.size()-1];
        for(int i=0;i<vt.size()-1;i++)
        {
            if(k<vt[i])return;
        }
        count++;
        return;
    }
    void check(TreeNode* root,vector<int>&vt)
    {
        if(!root)return;
        vt.push_back(root->val);
        check(root->left,vt);
        check(root->right,vt);
        count_check(vt);
        vt.pop_back();
    }
    int goodNodes(TreeNode* root) {
        vector<int> vt;
        check(root,vt);
        return count;
    }
};
