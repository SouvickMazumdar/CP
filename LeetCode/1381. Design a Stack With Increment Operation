class CustomStack {
public:
    // deque<int>st;
    // int n;
    // CustomStack(int maxSize) {
    //     n=maxSize;
    // }
    
    // void push(int x) {
    //     if(st.size()<n)
    //     {
    //         st.push_back(x);
    //     }
    // }
    
    // int pop() {
    //     if(st.empty())return -1;
    //     int m=st.back();st.pop_back();
    //     return m;
    // }
    
    // void increment(int k, int val) {
    //     vector<int>vc;
    //     while(!st.empty())
    //     {
    //         int m=st.front();st.pop_front();
    //         if(k)
    //         {
    //             vc.push_back(m+val);k--;
    //         }
    //         else
    //         vc.push_back(m); 
    //     }
    //     for(int i:vc)
    //     {
    //         st.push_back(i);
    //     }
    // }

    int *arr;
    int top=-1;
    int overflow;
    CustomStack(int maxSize) {
       int n=maxSize;
        arr=new int[n];
        overflow=maxSize;
    }
    
    void push(int x) {
        if(overflow>top+1)
        {
            top++;
            arr[top]=x;
        }
    }
    
    int pop() {
    if(top>=0)
    {
        int x=arr[top];
        top--;
        return x;
    }else
    return -1;

    }
    
    void increment(int k, int val) {
        if(k>top+1)
        k=top+1;
        for(int i=0;i<k;i++)
        arr[i]+=val;
    }

};

/**
 * Your CustomStack object will be instantiated and called as such:
 * CustomStack* obj = new CustomStack(maxSize);
 * obj->push(x);
 * int param_2 = obj->pop();
 * obj->increment(k,val);
 */
