//https://leetcode.com/problems/construct-string-from-binary-tree/description/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string ans="";
    void check(TreeNode* root)
    {
        if(!root)return;
       
        ans+=to_string(root->val);
        if(root->left)ans+='(';
        check(root->left);
        if(root->left==NULL && root->right!=NULL)ans+="()";
        if(root->right)ans+='(';
        check(root->right);
        ans+=')';
    }
    string tree2str(TreeNode* root) {
      check(root);

      return ans.substr(0,ans.size()-1);
    }
};
