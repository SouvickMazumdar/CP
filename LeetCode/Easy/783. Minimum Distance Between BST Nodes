//https://leetcode.com/problems/minimum-distance-between-bst-nodes/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>ans;
    void check(TreeNode* root)
    {
        if(!root)return;
        check(root->left);
        ans.push_back(root->val);
        check(root->right);
    }
    int minDiffInBST(TreeNode* root) {
        check(root);
        int dif=INT_MAX;
        for(int i=0;i<ans.size()-1;i++)
        {
            dif=min(dif,abs(ans[i]-ans[i+1]));
        }
        return dif;
    }
};
