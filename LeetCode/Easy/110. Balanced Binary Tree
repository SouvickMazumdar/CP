/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int isCheck(TreeNode* root)
    {
        if(root==NULL)return 0;
       // if(root->left==NULL && root->right==NULL)return 0;
        int left=isCheck(root->left);
        int right=isCheck(root->right);
        // if(left!=1e9 && right!=1e9)
        // {
        //     left=left+1;
        //     right=right+1;
        // }
        if(left==1e9 || right ==1e9)return 1e9;
        if(abs(left-right)>1)
        {return 1e9;}
        else
        return 1+max(left,right);
    }
    bool isBalanced(TreeNode* root) {
        int check=isCheck(root);
        if(check==1e9)return false;
        else
        return true;
        
    }
};
