class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        set<vector<int>>st;
        sort(nums.begin(),nums.end());
        int n=nums.size();
        if(n<4)return {};
        for(int p=0;p<n-3;p++)
        {
             if(p!=0 && nums[p]==nums[p-1])continue;
            for(int i=p+1;i<n-2;i++)
            {
                if(i!=p+1 && nums[i]==nums[i-1])continue;
                int j=n-1,k=i+1;
                while(i<k && j>k)
                {
                    long long sum=nums[p]*1.0+nums[i]*1.0+nums[k]*1.0+nums[j]*1.0;
                    if(sum==target)
                    {
                        st.insert({nums[p],nums[i],nums[k],nums[j]});
                        k++;j--;
                        while(nums[k]==nums[k-1] && k<j)k++;
                        while(nums[j]==nums[j+1] && k<j)j--;
                    }
                    else if(sum>target)
                    {
                        j--;
                    }
                    else
                    {k++;}
                }
            }
        }
        vector<vector<int>>vc;
        for (auto it:st)
        {
            vc.push_back(it);
        }
        return vc;
        
    }
};
