class Solution {
private:
    bool isvalid(int n,int i,int j)
    {
        if(i>=0 && i<n && j>=0 && j<n)
        return true;
        return false;
    }
public:
    bool checkValidGrid(vector<vector<int>>& grid) {
        int n=grid.size();
        int i=0,j=0,count=1,mt=0;
        if(grid[i][j]!=0)return false;
        int dr[]={-1,-2,-2,-1,+1,+2,+2,+1};
        int dc[]={-2,-1,+1,+2,+2,+1,-1,-2};
        while(count<n*n)
        {
           mt=0;
            for(int k=0;k<8;k++)
            {
                int r=i+dr[k];
                int c=j+dc[k];
                if(isvalid(n,r,c) && count==grid[r][c])
                {
                    i=r;j=c;mt=1;
                    count++;break;
                }
            }
            if(mt==1)continue;
            else
            return false;
        }
        return true;
        


    }
};
