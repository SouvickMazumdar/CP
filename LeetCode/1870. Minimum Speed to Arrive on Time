//Binary Search over the range
class Solution {
public:
    bool ispossible(vector<int>& dist, double hour,int speed)
    {
        double ans=0;
        for(int i=0;i<dist.size();i++)
        {
            if(i!=dist.size()-1)
            ans+=ceil((dist[i]*1.0)/speed);
            else
            ans+=dist[i]*1.0/speed;
            if(ans>hour)return false;
        }
        if(ans<=hour)return true;
        return false;
    }
    int minSpeedOnTime(vector<int>& dist, double hour) {
        if(hour<dist.size()-1)return -1;
        int start=1;
        int end=1e7;
        int minspeed=-1;
        while(start<=end)
        {
            int mid=end-(end-start)/2;
            if(ispossible(dist,hour,mid))
            {
                minspeed=mid;
                end=mid-1;
            }
            else
            {
                start=mid+1;
            }
        }
        return minspeed;
    }
};
