/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        vector<int>ans;
        ListNode* head=new ListNode();
        if(lists.size()==0)return {};
        int count=0;
        for(auto it:lists)
        {
            if(it==nullptr)continue;
            count=1;
            ListNode* tead=it;
            while(tead)
            {
                ans.push_back(tead->val);
                tead=tead->next;
            }
        }
        if(count==0)return {{}};
        sort(ans.begin(),ans.end());

        head->val=ans[0];
        ListNode* temp=head;
        
        for(int i=1;i<ans.size();i++)
        {
            ListNode* tp=new ListNode(ans[i]);
            temp->next=tp;
            temp=tp;
        }
        return head;
    }
};
