class Solution {
public:
    int numOfMinutes(int n, int headID, vector<int>& manager, vector<int>& informTime) {
        int head=headID;
       
        vector<int> edges[n];
        for(int i=0;i<n;i++)
        {
            // cout<<i<<endl;
            if(manager[i]!=-1)
            edges[manager[i]].push_back(i);
        }

        queue<pair<int,int>>q;
        q.push({head,0});
        int maxi=-1e9;
        while(!q.empty())
        {
            int s=q.size();
            auto it=q.front();
            int parent=it.first;
            int time=it.second;
            q.pop();
            for(int i:edges[parent])
            {
                // if(i==1e9)break;
                q.push({i,time+informTime[parent]});
                maxi=max(maxi,time+informTime[parent]);
            }

        }
        if(maxi==-1e9)return 0;
        return maxi;
    }
};
