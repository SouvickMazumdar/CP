//https://www.codingninjas.com/codestudio/problems/longest-common-substring
int tabulation(int n,int m,string &s,string &t,vector<vector<int>>&dp)
{
    int maxi=-1e8;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(s[i]==t[j])
            {
                if(i==0||j==0)
                    dp[i][j]=1;
                else
                    dp[i][j]=1+dp[i-1][j-1];
            }
            else
                dp[i][j]=0;//This is the only change for LONGEST COMMON SUBSTRING from LONGEST COMMON SUBSEQUENCE
            
            maxi=max(maxi,dp[i][j]);
        }
    }
    return maxi;
}
int lcs(string &str1, string &str2){
	//	Write your code here.
    int n=str1.size();int m=str2.size();
    vector<vector<int>> dp(n,vector<int>(m,0));
    int k=tabulation(n,m,str1,str2,dp);
    //TO PRINT THE LONGEST SUBSTRING 
    
//     int row=0,col=0;
//     for(int i=0;i<n;i++)
//     {  for(int j=0;j<m;j++)
//         {
//             if(dp[i][j]==k)
//             {
//                 row=i;col=j;
//             }
//         }
//      }
//         string lcs="";
//     for(int i=0;i<k;i++) lcs+="$";
//     int index=k-1;
//     int i=row;
//     while(index>=0)
//     {
//        lcs[index--]=str1[i];i--;
//     }
//     cout<<lcs<<endl;
    return k;
}