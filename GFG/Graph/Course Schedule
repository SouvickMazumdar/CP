class Solution
{
  //https://practice.geeksforgeeks.org/problems/course-schedule
  public:
    vector<int> findOrder(int N, int m, vector<vector<int>> prerequisites) 
    {
        vector<int>adj[N];
	    for(auto it: prerequisites)
	    {
	        adj[it[1]].push_back(it[0]);
	    }
	    
	    // Code here
	    int indegree[N]={0};
	    for(int i=0;i<N;i++)
	    {
	        for(auto it: adj[i])
	        {
	            indegree[it]++;
	        }
	    }
	    queue<int>q;
	    for(int i=0;i<N;i++)
	    {
	        if(indegree[i]==0)q.push(i);
	    }
	    int cnt=0;
	    vector<int>topo_sort;
	    while(!q.empty())
	    {
	        int node=q.front();
	        q.pop();
	        topo_sort.push_back(node);cnt++;
	        for(auto it:adj[node])
	        {
	            indegree[it]--;
	            if(indegree[it]==0)q.push(it);
	        }
	    }
	    if(cnt==N)return topo_sort;
	    return {};
        
    }
};
