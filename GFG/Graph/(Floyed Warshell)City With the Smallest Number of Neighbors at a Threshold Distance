class Solution {
  public:
    int findCity(int n, int m, vector<vector<int>>& edges,
                 int thresh) {
        vector<vector<int>>dist(n,vector<int>(n,INT_MAX));
        for(auto it:edges)
        {
            dist[it[0]][it[1]]=it[2];
            dist[it[1]][it[0]]=it[2];
        }
       
        for(int i=0;i<n;i++)dist[i][i]=0;
        for(int k=0;k<n;k++)
        {
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<n;j++)
                {
                    if(dist[i][k]==INT_MAX||dist[k][j]==INT_MAX||i==j)continue;
                    dist[i][j]=min(dist[i][j],dist[i][k]+dist[k][j]);
                }
            }
        }
        
        int city_count=n,city=0;
        for(int i=0;i<n;i++)
        {
           int  count=0;
            for(int j=0;j<n;j++)
            {
                if(dist[i][j]<=thresh&& i!=j)
                {
                    count++;
                }
            }
            if(count<=city_count)
            {
                city_count=count;
                city=i;
            }
        }
        return city;
                     
     }
};
