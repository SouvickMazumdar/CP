Solution{
    public:
    void solve(int i,int j,vector<vector<int>>ar,vector<vector<int>>&vis, vector<string>&ans, int n,string move, int di[],int dj[])
    {
        if(i==n-1&&j==n-1)
        {
            ans.push_back(move);
            return;
        }
        string dir="DLRU";
        for(int ind=0;ind<4;ind++)
        {
            int next_i=i+di[ind];
            int next_j=j+dj[ind];
            if(next_i>=0 && next_j>=0 && next_i<n && next_j<n && !vis[next_i][next_j] && ar[next_i][next_j]==1)
            {
                vis[next_i][next_j]=1;
                // cout<<dir[ind]<<"&&";
                solve(next_i, next_j, ar,vis,ans,n,move+dir[ind],di,dj);
                vis[next_i][next_j]=0;
            }
        }
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string>ans;
        vector<vector<int>> vis(n,vector<int>(n,0));
        int di[]={+1,0,0,-1};
        int dj[]={0,-1,+1,0};
        vis[0][0]=1;
        if(m[0][0]==1)solve(0,0,m,vis,ans,n,"",di,dj);
        return ans;
        
    }
};
