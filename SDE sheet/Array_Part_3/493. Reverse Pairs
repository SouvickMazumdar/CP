//https://leetcode.com/problems/reverse-pairs/

class Solution {
public:
    int count=0;
     void merge(int s,int e,int mid,vector<int>&vc)
    {

         int j=mid+1;
        for(int i=s;i<=mid;i++)
        {
            // j=mid+1;
            while(j<=e && vc[i]>2*(long long)vc[j])
            {
                j++;
            }
            
           count+=j-(mid+1);  
        }

        vector<int>ac;
        int i=s;
        j=mid+1;
        while(i<=mid && j<=e)
        {
            if(vc[i]<vc[j])
            {
                ac.push_back(vc[i++]);
            }
            else
            {
                ac.push_back(vc[j++]);
                
            }
            
        }
        while(i<=mid)ac.push_back(vc[i++]);
        while(j<=e)ac.push_back(vc[j++]);
        int k=0;
        for(int i=s;i<=e;i++)
        {
            vc[i]=ac[k++];
        }
    }
    void merge_sort(int start,int end, vector<int> &vc)
    {
        if(start<end)
        {
            int mid=start+(end-start)/2;
            merge_sort(start,mid,vc);
            merge_sort(mid+1,end,vc);
            merge(start,end,mid,vc);

        }
    }
    int reversePairs(vector<int>& nums) {
        merge_sort(0,nums.size()-1,nums);
        // for(auto i:nums)
        // {
        //     cout<<i<<" ";
        // }
        return count;
    }
};
