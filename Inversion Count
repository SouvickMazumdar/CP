#include <bits/stdc++.h> 
#define ll long long
ll cnt=0;
void merge(ll *arr,ll low,ll mid,ll high)
{
    vector<ll>brr;
    ll c=low;
    ll d=mid+1;
    while(c<=mid && d<=high)
    {
        if(arr[c]<arr[d])
        {
            
             brr.push_back(arr[c++]);    
        }
        else
        {
            brr.push_back(arr[d++]);
            cnt+=(mid-c+1);
        }
        
    }
    while(c<=mid)brr.push_back(arr[c++]);
    while(d<=high)brr.push_back(arr[d++]);
    ll k=0;
    for(ll i=low;i<=high;i++)
    {
        arr[i]=brr[k++];
    }

}
void mergesort(ll *arr,ll low,ll high)
{
    
    if(low<high)
    {
        ll mid=low-(low-high)/2;
        mergesort(arr, low,mid);
        mergesort(arr,mid+1,high);
        merge(arr,low,mid,high);
    }
}
long long getInversions(long long *arr, int n){
    // Write your code here.
    mergesort(arr,0,n-1);
    // for(int i=0;i<n;i++)
    // {
    //     cout<<arr[i]<<" ";
    // }
    // cout<<endl;
    return cnt;
}
