class Solution {
public:
    bool mins(vector<int>nums,int mid,int p)
    {
        int n=nums.size();
        int c=0;
         for (int i = 0; i  < n-1; i++){

            if (nums[i + 1] - nums[i] <= mid) {
               c++;
               i++;//no index appears more than once amongst the p pairs
            }
            if(c>=p)//able to find
            return true;
           }
           return false;
    }
    int minimizeMax(vector<int>& nums, int p) {
      sort(nums.begin(),nums.end());
      int start=0,end=nums.back()-nums.front();
    //   start<end beacause of the condition end=mid, else loop will go to infinite
      while(start<end)
      {
          int mid=start-(start-end)/2;
          if(mins(nums,mid,p))
          {
              end=mid;//end ko mid isliye kiya gya hai because possiblity hai ki mid baad mein jake ansewer de de
          }
          else
          start=mid+1;
      }
      return start;
    }
};
