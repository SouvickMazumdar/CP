//https://leetcode.com/problems/n-ary-tree-preorder-traversal/description/

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int>ans;
    void helper(Node* root)
    {
        if(!root)return;
        ans.push_back(root->val);
        int size=root->children.size();
        for(int i=0;i<size;i++)
        {
           helper(root->children[i]);
        }
    }
    vector<int> preorder(Node* root) {
        if(!root)return ans;
        helper(root);
        return ans;
    }
};
