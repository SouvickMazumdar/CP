/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void recur(TreeNode*temp,int val,int k)
    {
        if(!temp)return;
        if(k==1)
        {
            if(temp->left){
                TreeNode* cur=new TreeNode(val);
                TreeNode*vec=temp->left;
                temp->left=cur;
                temp->left->left=vec;
            }
            else
            {
                TreeNode* cur=new TreeNode(val);
                temp->left=cur;
            }
            if(temp->right){
                TreeNode* cur=new TreeNode(val);
                TreeNode*vec=temp->right;
                temp->right=cur;
                temp->right->right=vec;
            }
            else
            {
                TreeNode* cur=new TreeNode(val);
                temp->right=cur;
            }
        }
        recur(temp->left,val,k-1);
        recur(temp->right,val,k-1);
    }
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth==1){
            TreeNode* temp=new TreeNode(val);
            temp->left=root;
            root=temp;
            return root;
        }
        recur(root,val,depth-1);
        return root;
    }
};
