//https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if (!root)return ans;
        queue<TreeNode*>q;
        q.push(root);


        int k=0;
        while(!q.empty())
        {
            int size=q.size();
            vector<int>check(size);
            
            for(int i=0;i<size;i++)
            {
                TreeNode* cur=q.front();
                q.pop();
                //cout<<"# ";
                if(cur->left)q.push(cur->left);
                if(cur->right)q.push(cur->right);
                int t=k&1?size-i-1:i;
                check[t]=cur->val;
                
            }
            k++;
            ans.push_back(check);
        }
        return ans;
    }
};
