/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>st;
    void recur(TreeNode* temp, int kt)
    {
        if(!temp)return;
        if(!temp->left && !temp->right){
            kt=kt*10+temp->val;
            st.push_back(kt);
            kt/=10;
            return;
        }
        recur(temp->left, kt*10+temp->val);
        recur(temp->right,kt*10+temp->val);
        kt/=10;

    }
    int sumNumbers(TreeNode* root) {
        recur(root,0);
        int sum=0;
        for(auto it:st)sum+=it;
        return sum;
    }
};
