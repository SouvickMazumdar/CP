//https://leetcode.com/problems/minimum-absolute-difference-in-bst/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void check(TreeNode* root,stack<int> &st,int &dif)
    {
        if(!root)return;
        check(root->left,st,dif);
        if(!st.empty())
        {
            dif=min(dif,abs(root->val-st.top()));
            
            st.pop();
        }
        st.push(root->val);
        check(root->right,st,dif);
    }
    int getMinimumDifference(TreeNode* root) {
        stack<int> st;
        int dif=INT_MAX;
        check(root,st,dif);
        return dif;
    }
};
