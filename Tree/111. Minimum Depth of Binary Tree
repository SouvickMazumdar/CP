//https://leetcode.com/problems/minimum-depth-of-binary-tree/description/
//The main concept in this question is the recursive call along with backtracking logic
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(!root)return 0;
        int lh=minDepth(root->left);
        int rh=minDepth(root->right);
        if(lh==0 && rh==0)//This is the condition for leafnode check
        return 1;
        else if(lh==0)//This will help to check skew tree
        return rh+1;
        else if(rh==0)
        return lh+1;
        else
        return 1+min(lh,rh);//the control will come here only when the root is not leaf node and having mini two child(left and right)
        
    }

     
};
