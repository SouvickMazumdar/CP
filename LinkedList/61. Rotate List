/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        int cnt=1;
        if(!head)return head;
        ListNode* temp=head;
        while(temp->next)
        {
            cnt++;
            temp=temp->next;
        }
        temp->next=head;
        int t=cnt-(k%cnt);
        temp=head;
        cnt=1;
        while(temp)
        {
            if(cnt==t)
            {
                head=temp->next;
                temp->next=NULL;
                break;
            }
            cnt++;
            temp=temp->next;
        }
        return head;

    }
};
