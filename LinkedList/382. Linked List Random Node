// Problem Link:
// https://leetcode.com/problems/linked-list-random-node/description/

//Beautiful Explanation
// https://www.geeksforgeeks.org/rand-and-srand-in-ccpp/
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    vector<int>vc;
    int n;
public:
    Solution(ListNode* head) {
        ListNode* ptr=head;
        while(ptr)
        {
            vc.push_back(ptr->val);
            ptr=ptr->next;
        }
        n=vc.size();
    }
    
    int getRandom() {
        static int i=0;
        if(i==0)
        {
            srand(time(0));
            i++;
        }
        return (vc[rand()%n]);
        
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(head);
 * int param_1 = obj->getRandom();
 */
